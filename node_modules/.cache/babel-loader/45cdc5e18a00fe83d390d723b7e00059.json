{"ast":null,"code":"import _defineProperty from \"/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/src/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@atlaskit/css-reset';\nimport styled from 'styled-components';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport initialData from './initial-data';\nimport Column from './column';\nvar Container = styled.div(_templateObject());\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = initialData;\n\n    _this.onDragStart = function (start) {\n      var homeIndex = _this.state.columnOrder.indexOf(start.source.droppableId);\n\n      _this.setState({\n        homeIndex: homeIndex\n      });\n    };\n\n    _this.onDragEnd = function (result) {\n      var _objectSpread3;\n\n      _this.setState({\n        homeIndex: null\n      });\n\n      var destination = result.destination,\n          source = result.source,\n          draggableId = result.draggableId;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      var home = _this.state.columns[source.droppableId];\n      var foreign = _this.state.columns[destination.droppableId];\n\n      if (home === foreign) {\n        var newTaskIds = Array.from(home.taskIds);\n        newTaskIds.splice(source.index, 1);\n        newTaskIds.splice(destination.index, 0, draggableId);\n\n        var _newHome = _objectSpread({}, home, {\n          taskIds: newTaskIds\n        });\n\n        var _newState = _objectSpread({}, _this.state, {\n          columns: _objectSpread({}, _this.state.columns, _defineProperty({}, _newHome.id, _newHome))\n        });\n\n        _this.setState(_newState);\n\n        return;\n      } // moving from one list to another\n\n\n      var homeTaskIds = Array.from(home.taskIds);\n      homeTaskIds.splice(source.index, 1);\n\n      var newHome = _objectSpread({}, home, {\n        taskIds: homeTaskIds\n      });\n\n      var foreignTaskIds = Array.from(foreign.taskIds);\n      foreignTaskIds.splice(destination.index, 0, draggableId);\n\n      var newForeign = _objectSpread({}, foreign, {\n        taskIds: foreignTaskIds\n      });\n\n      var newState = _objectSpread({}, _this.state, {\n        columns: _objectSpread({}, _this.state.columns, (_objectSpread3 = {}, _defineProperty(_objectSpread3, newHome.id, newHome), _defineProperty(_objectSpread3, newForeign.id, newForeign), _objectSpread3))\n      });\n\n      _this.setState(newState);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(DragDropContext, {\n        onDragStart: this.onDragStart,\n        onDragEnd: this.onDragEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.columnOrder.map(function (columnId, index) {\n        var column = _this2.state.columns[columnId];\n        var tasks = column.taskIds.map(function (taskId) {\n          return _this2.state.tasks[taskId];\n        });\n        var isDropDisabled = index < _this2.state.homeIndex;\n        return React.createElement(Column, {\n          key: column.id,\n          column: column,\n          tasks: tasks,\n          isDropDisabled: isDropDisabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/src/index.js"],"names":["React","ReactDOM","styled","DragDropContext","initialData","Column","Container","div","App","state","onDragStart","start","homeIndex","columnOrder","indexOf","source","droppableId","setState","onDragEnd","result","destination","draggableId","index","home","columns","foreign","newTaskIds","Array","from","taskIds","splice","newHome","newState","id","homeTaskIds","foreignTaskIds","newForeign","map","columnId","column","tasks","taskId","isDropDisabled","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@atlaskit/css-reset';\nimport styled from 'styled-components';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport initialData from './initial-data';\nimport Column from './column';\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nclass App extends React.Component {\n  state = initialData;\n\n  onDragStart = start => {\n    const homeIndex = this.state.columnOrder.indexOf(start.source.droppableId);\n\n    this.setState({\n      homeIndex,\n    });\n  };\n\n  onDragEnd = result => {\n    this.setState({\n      homeIndex: null,\n    });\n\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const home = this.state.columns[source.droppableId];\n    const foreign = this.state.columns[destination.droppableId];\n\n    if (home === foreign) {\n      const newTaskIds = Array.from(home.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newHome = {\n        ...home,\n        taskIds: newTaskIds,\n      };\n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newHome.id]: newHome,\n        },\n      };\n\n      this.setState(newState);\n      return;\n    }\n\n    // moving from one list to another\n    const homeTaskIds = Array.from(home.taskIds);\n    homeTaskIds.splice(source.index, 1);\n    const newHome = {\n      ...home,\n      taskIds: homeTaskIds,\n    };\n\n    const foreignTaskIds = Array.from(foreign.taskIds);\n    foreignTaskIds.splice(destination.index, 0, draggableId);\n    const newForeign = {\n      ...foreign,\n      taskIds: foreignTaskIds,\n    };\n\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newHome.id]: newHome,\n        [newForeign.id]: newForeign,\n      },\n    };\n    this.setState(newState);\n  };\n\n  render() {\n    return (\n      <DragDropContext\n        onDragStart={this.onDragStart}\n        onDragEnd={this.onDragEnd}\n      >\n        <Container>\n          {this.state.columnOrder.map((columnId, index) => {\n            const column = this.state.columns[columnId];\n            const tasks = column.taskIds.map(\n              taskId => this.state.tasks[taskId],\n            );\n\n            const isDropDisabled = index < this.state.homeIndex;\n\n            return (\n              <Column\n                key={column.id}\n                column={column}\n                tasks={tasks}\n                isDropDisabled={isDropDisabled}\n              />\n            );\n          })}\n        </Container>\n      </DragDropContext>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}