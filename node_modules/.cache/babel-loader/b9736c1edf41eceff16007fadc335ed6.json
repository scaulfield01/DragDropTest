{"ast":null,"code":"import _classCallCheck from \"/Users/stephencaulfield/Desktop/Programing/dnd/DragDropClone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stephencaulfield/Desktop/Programing/dnd/DragDropClone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stephencaulfield/Desktop/Programing/dnd/DragDropClone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stephencaulfield/Desktop/Programing/dnd/DragDropClone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stephencaulfield/Desktop/Programing/dnd/DragDropClone/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/stephencaulfield/Desktop/Programing/dnd/DragDropClone/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/stephencaulfield/Desktop/Programing/dnd/DragDropClone/src/column.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 8px;\\n  transition: background-color 0.2s ease;\\n  background-color: \", \";\\n  flex-grow: 1;\\n  min-height: 100px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 8px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 8px;\\n  border: 1px solid lightgrey;\\n  background-color: white;\\n  border-radius: 2px;\\n  width: 220px;\\n\\n  display: flex;\\n  flex-direction: column;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Task from './task';\nvar Container = styled.div(_templateObject());\nvar Title = styled.h3(_templateObject2());\nvar TaskList = styled.div(_templateObject3(), function (props) {\n  return props.isDraggingOver ? 'lightgrey' : 'inherit';\n});\n\nvar InnerList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InnerList, _React$Component);\n\n  function InnerList() {\n    _classCallCheck(this, InnerList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InnerList).apply(this, arguments));\n  }\n\n  _createClass(InnerList, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      if (nextProps.tasks === this.props.tasks) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.tasks.map(function (task, index) {\n        return React.createElement(Task, {\n          key: task.id,\n          task: task,\n          index: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      });\n    }\n  }]);\n\n  return InnerList;\n}(React.Component);\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Column, _React$Component2);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  _createClass(Column, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Draggable, {\n        draggableId: this.props.column.id,\n        index: this.props.index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, function (provided) {\n        return React.createElement(Container, Object.assign({}, provided.draggableProps, {\n          innerRef: provided.innerRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }), React.createElement(Title, Object.assign({}, provided.dragHandleProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), _this.props.column.title), React.createElement(Droppable, {\n          droppableId: _this.props.column.id,\n          type: \"task\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, function (provided, snapshot) {\n          return React.createElement(TaskList, Object.assign({\n            innerRef: provided.innerRef\n          }, provided.droppableProps, {\n            isDraggingOver: snapshot.isDraggingOver,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }), React.createElement(InnerList, {\n            tasks: _this.props.tasks,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }), provided.placeholder);\n        }));\n      });\n    }\n  }]);\n\n  return Column;\n}(React.Component);\n\nexport { Column as default };","map":{"version":3,"sources":["/Users/stephencaulfield/Desktop/Programing/dnd/DragDropClone/src/column.js"],"names":["React","styled","Droppable","Draggable","Task","Container","div","Title","h3","TaskList","props","isDraggingOver","InnerList","nextProps","tasks","map","task","index","id","Component","Column","column","provided","draggableProps","innerRef","dragHandleProps","title","snapshot","droppableProps","placeholder"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,qBAArC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAV,mBAAf;AAUA,IAAMC,KAAK,GAAGN,MAAM,CAACO,EAAV,oBAAX;AAGA,IAAMC,QAAQ,GAAGR,MAAM,CAACK,GAAV,qBAGQ,UAAAI,KAAK;AAAA,SACvBA,KAAK,CAACC,cAAN,GAAuB,WAAvB,GAAqC,SADd;AAAA,CAHb,CAAd;;IASMC,S;;;;;;;;;;;;;0CACkBC,S,EAAW;AAC/B,UAAIA,SAAS,CAACC,KAAV,KAAoB,KAAKJ,KAAL,CAAWI,KAAnC,EAA0C;AACxC,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD;;;6BACQ;AACP,aAAO,KAAKJ,KAAL,CAAWI,KAAX,CAAiBC,GAAjB,CAAqB,UAACC,IAAD,EAAOC,KAAP;AAAA,eAC1B,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAED,IAAI,CAACE,EAAhB;AAAoB,UAAA,IAAI,EAAEF,IAA1B;AAAgC,UAAA,KAAK,EAAEC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD0B;AAAA,OAArB,CAAP;AAGD;;;;EAXqBjB,KAAK,CAACmB,S;;IAcTC,M;;;;;;;;;;;;;6BACV;AAAA;;AACP,aACE,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAE,KAAKV,KAAL,CAAWW,MAAX,CAAkBH,EAA1C;AAA8C,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWO,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,UAAAK,QAAQ;AAAA,eACP,oBAAC,SAAD,oBAAeA,QAAQ,CAACC,cAAxB;AAAwC,UAAA,QAAQ,EAAED,QAAQ,CAACE,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACE,oBAAC,KAAD,oBAAWF,QAAQ,CAACG,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACG,KAAI,CAACf,KAAL,CAAWW,MAAX,CAAkBK,KADrB,CADF,EAIE,oBAAC,SAAD;AAAW,UAAA,WAAW,EAAE,KAAI,CAAChB,KAAL,CAAWW,MAAX,CAAkBH,EAA1C;AAA8C,UAAA,IAAI,EAAC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,UAACI,QAAD,EAAWK,QAAX;AAAA,iBACC,oBAAC,QAAD;AACE,YAAA,QAAQ,EAAEL,QAAQ,CAACE;AADrB,aAEMF,QAAQ,CAACM,cAFf;AAGE,YAAA,cAAc,EAAED,QAAQ,CAAChB,cAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAKE,oBAAC,SAAD;AAAW,YAAA,KAAK,EAAE,KAAI,CAACD,KAAL,CAAWI,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAMGQ,QAAQ,CAACO,WANZ,CADD;AAAA,SADH,CAJF,CADO;AAAA,OADX,CADF;AAuBD;;;;EAzBiC7B,KAAK,CAACmB,S;;SAArBC,M","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Task from './task';\n\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgrey;\n  background-color: white;\n  border-radius: 2px;\n  width: 220px;\n\n  display: flex;\n  flex-direction: column;\n`;\nconst Title = styled.h3`\n  padding: 8px;\n`;\nconst TaskList = styled.div`\n  padding: 8px;\n  transition: background-color 0.2s ease;\n  background-color: ${props =>\n    props.isDraggingOver ? 'lightgrey' : 'inherit'};\n  flex-grow: 1;\n  min-height: 100px;\n`;\n\nclass InnerList extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.tasks === this.props.tasks) {\n      return false;\n    }\n    return true;\n  }\n  render() {\n    return this.props.tasks.map((task, index) => (\n      <Task key={task.id} task={task} index={index} />\n    ));\n  }\n}\n\nexport default class Column extends React.Component {\n  render() {\n    return (\n      <Draggable draggableId={this.props.column.id} index={this.props.index}>\n        {provided => (\n          <Container {...provided.draggableProps} innerRef={provided.innerRef}>\n            <Title {...provided.dragHandleProps}>\n              {this.props.column.title}\n            </Title>\n            <Droppable droppableId={this.props.column.id} type=\"task\">\n              {(provided, snapshot) => (\n                <TaskList\n                  innerRef={provided.innerRef}\n                  {...provided.droppableProps}\n                  isDraggingOver={snapshot.isDraggingOver}\n                >\n                  <InnerList tasks={this.props.tasks} />\n                  {provided.placeholder}\n                </TaskList>\n              )}\n            </Droppable>\n          </Container>\n        )}\n      </Draggable>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}