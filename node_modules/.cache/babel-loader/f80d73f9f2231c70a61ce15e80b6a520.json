{"ast":null,"code":"import _defineProperty from \"/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/src/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@atlaskit/css-reset';\nimport styled from 'styled-components';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport initialData from './initial-data';\nimport Column from './column';\nvar Container = styled.div(_templateObject());\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = initialData;\n\n    _this.onDragEnd = function (result) {\n      var _objectSpread3;\n\n      var destination = result.destination,\n          source = result.source,\n          draggableId = result.draggableId;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      var home = _this.state.columns[source.droppableId];\n      var foreign = _this.state.columns[destination.droppableId];\n\n      if (home === foreign) {\n        var newTaskIds = Array.from(home.taskIds);\n        newTaskIds.splice(source.index, 1);\n        newTaskIds.splice(destination.index, 0, draggableId);\n\n        var _newHome = _objectSpread({}, home, {\n          taskIds: newTaskIds\n        });\n\n        var _newState = _objectSpread({}, _this.state, {\n          columns: _objectSpread({}, _this.state.columns, _defineProperty({}, _newHome.id, _newHome))\n        });\n\n        _this.setState(_newState);\n\n        return;\n      } // moving from one list to another\n\n\n      var homeTaskIds = Array.from(home.taskIds);\n      homeTaskIds.splice(source.index, 1);\n\n      var newHome = _objectSpread({}, home, {\n        taskIds: homeTaskIds\n      });\n\n      var foreignTaskIds = Array.from(foreign.taskIds);\n      foreignTaskIds.splice(destination.index, 0, draggableId);\n\n      var newForeign = _objectSpread({}, foreign, {\n        taskIds: foreignTaskIds\n      });\n\n      var newState = _objectSpread({}, _this.state, {\n        columns: _objectSpread({}, _this.state.columns, (_objectSpread3 = {}, _defineProperty(_objectSpread3, newHome.id, newHome), _defineProperty(_objectSpread3, newForeign.id, newForeign), _objectSpread3))\n      });\n\n      _this.setState(newState);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.columnOrder.map(function (columnId) {\n        var column = _this2.state.columns[columnId];\n        var tasks = column.taskIds.map(function (taskId) {\n          return _this2.state.tasks[taskId];\n        });\n        return React.createElement(Column, {\n          key: column.id,\n          column: column,\n          tasks: tasks,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/stephencaulfield/Desktop/Programing/dnd/trelloclone/src/index.js"],"names":["React","ReactDOM","styled","DragDropContext","initialData","Column","Container","div","App","state","onDragEnd","result","destination","source","draggableId","droppableId","index","home","columns","foreign","newTaskIds","Array","from","taskIds","splice","newHome","newState","id","setState","homeTaskIds","foreignTaskIds","newForeign","columnOrder","map","columnId","column","tasks","taskId","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@atlaskit/css-reset';\nimport styled from 'styled-components';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport initialData from './initial-data';\nimport Column from './column';\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nclass App extends React.Component {\n  state = initialData;\n\n  onDragEnd = result => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const home = this.state.columns[source.droppableId];\n    const foreign = this.state.columns[destination.droppableId];\n\n    if (home === foreign) {\n      const newTaskIds = Array.from(home.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newHome = {\n        ...home,\n        taskIds: newTaskIds,\n      };\n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newHome.id]: newHome,\n        },\n      };\n\n      this.setState(newState);\n      return;\n    }\n\n    // moving from one list to another\n    const homeTaskIds = Array.from(home.taskIds);\n    homeTaskIds.splice(source.index, 1);\n    const newHome = {\n      ...home,\n      taskIds: homeTaskIds,\n    };\n\n    const foreignTaskIds = Array.from(foreign.taskIds);\n    foreignTaskIds.splice(destination.index, 0, draggableId);\n    const newForeign = {\n      ...foreign,\n      taskIds: foreignTaskIds,\n    };\n\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newHome.id]: newHome,\n        [newForeign.id]: newForeign,\n      },\n    };\n    this.setState(newState);\n  };\n\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Container>\n          {this.state.columnOrder.map(columnId => {\n            const column = this.state.columns[columnId];\n            const tasks = column.taskIds.map(\n              taskId => this.state.tasks[taskId],\n            );\n\n            return <Column key={column.id} column={column} tasks={tasks} />;\n          })}\n        </Container>\n      </DragDropContext>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}